library(tidyverse)
#library(Cairo)
#library(data.table)
library(srvyr)
library(janitor)




library(foreign)
library(tidyverse)

dbf23 <- read.dbf("datos/secc_3/encig2023_01_sec1_A_3_4_5_8_9_10.dbf", as.is = T) %>% 
  mutate(ejercicio=2023) %>% 
  select(ejercicio, ID_PER,CVE_ENT, CVE_MUN,  AREAM,  UPM,
         EST_DIS,UPM_DIS, EST, FAC_VIV,FAC_P18,
         starts_with("P4_")) %>%
  mutate(across(where(is.numeric), as.character))

dbf21 <- read.dbf("datos/secc_3/encig2021_01_sec1_A_3_4_5_8_9_10.dbf", as.is = T) %>% 
  rename(CVE_ENT=ENT, CVE_MUN=MUN) %>% 
  mutate(ejercicio=2021) %>% 
  select(ejercicio, ID_PER,CVE_ENT, CVE_MUN,  AREAM,  UPM,
         EST_DIS,UPM_DIS, EST, FAC_VIV,FAC_P18,
         starts_with("P4_")) %>%
  mutate(across(where(is.numeric), as.character))

dbf19<- read.dbf("datos/secc_3/encig2019_01_sec1_3_4_5_8_9_10.dbf", as.is = T) %>% 
  rename(CVE_ENT=ENT, CVE_MUN=MUN) %>% 
  mutate(ejercicio=2019) %>% 
  select(ejercicio, ID_PER,CVE_ENT, CVE_MUN,  AREAM,  UPM,
         EST_DIS,UPM_DIS, EST, FAC_VIV,FAC_P18,
         starts_with("P4_")) %>%
  mutate(across(where(is.numeric), as.character))



dbf17 <- read.dbf("datos/secc_3/encig2017_01_sec1_3_4_5_8_9_10.dbf", as.is = T)  %>% 
  rename(CVE_ENT=ENT, CVE_MUN=MUN) %>% 
  mutate(ejercicio=2017) %>% 
  select(ejercicio, ID_PER,CVE_ENT, CVE_MUN,  AREAM,  UPM,
         EST_DIS,UPM_DIS, EST, FAC_VIV,FAC_P18,
         starts_with("P4_")) %>%
  mutate(across(where(is.numeric), as.character))

dbf15 <- read.dbf("datos/secc_3/encig2015_01_sec1_3_4_5_8_9_10.dbf", as.is = T)  %>% 
  rename(CVE_ENT=ENT, CVE_MUN=MUN, ID_PER=PER) %>% 
  mutate(ejercicio=2015) %>% 
  select(ejercicio, ID_PER,CVE_ENT, CVE_MUN,  AREAM,  UPM,
         EST_DIS,UPM_DIS, EST, FAC_VIV,FAC_P18,
         starts_with("P4_")) %>%
  mutate(across(where(is.numeric), as.character))




encig_15_23 <-dbf23 %>% 
  bind_rows(dbf21,dbf19,dbf17,dbf15)

encig_15_23 <- encig_15_23 %>% 
  mutate(FAC_P18=as.numeric(FAC_P18),
         EST_DIS=as.numeric(EST_DIS),
         UPM_DIS=as.numeric(UPM_DIS))



mydesign <-encig_15_23  %>% 
  as_survey_design(ids=UPM_DIS, # Unidad primaria de muestreo
                   strata=EST_DIS, # Estrato
                   weights=FAC_P18, # Factor de expansión
                   nest=TRUE)



P4_4_1 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_4_1) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_4_1=="1") %>% 
  select(-c(servicio_se,P4_4_1)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="parques_horario")

P4_4_2 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_4_2) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_4_2=="1") %>% 
  select(-c(servicio_se,P4_4_2)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="parques_cercania")

P4_4_3 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_4_3) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_4_3=="1") %>% 
  select(-c(servicio_se,P4_4_3)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="parques_limpieza")

P4_4_4 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_4_4) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_4_4=="1") %>% 
  select(-c(servicio_se,P4_4_4)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="parques_seguridad")


P4_4A <- mydesign %>%
  group_by(AREAM,ejercicio, P4_4A) %>% 
  summarise(proportion= survey_mean()) %>% filter(P4_4A=="1" | P4_4A=="2") %>% 
  ungroup() %>% 
  group_by(AREAM,ejercicio) %>% 
  summarise(servicio=sum(proportion)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="parques_satisfaccion")


P4_5_1 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_5_1) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_5_1=="1") %>% 
  select(-c(servicio_se,P4_5_1)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="basura_oportuno")

P4_5_2 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_5_2) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_5_2=="1") %>% 
  select(-c(servicio_se,P4_5_2)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="basura_gratuita")

P4_5_3 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_5_3) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_5_3=="1") %>% 
  select(-c(servicio_se,P4_5_3)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="basura_residuos")

P4_5A <- mydesign %>%
  group_by(AREAM,ejercicio, P4_5A) %>% 
  summarise(proportion= survey_mean()) %>% filter(P4_5A=="1" | P4_5A=="2") %>% 
  ungroup() %>% 
  group_by(AREAM,ejercicio) %>% 
  summarise(servicio=sum(proportion)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="basura_satisfaccion")


P4_6_1 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_6_1) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_6_1=="1") %>% 
  select(-c(servicio_se,P4_6_1)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="policia_contribucion")

P4_6_2 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_6_2) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_6_2=="1") %>% 
  select(-c(servicio_se,P4_6_2)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="policia_disposicion")


P4_6A <- mydesign %>%
  group_by(AREAM,ejercicio, P4_6A) %>% 
  summarise(proportion= survey_mean()) %>% filter(P4_6A=="1" | P4_6A=="2") %>% 
  ungroup() %>% 
  group_by(AREAM,ejercicio) %>% 
  summarise(servicio=sum(proportion)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="policia_satisfaccion")


P4_7_1 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_7_1) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_7_1=="1") %>% 
  select(-c(servicio_se,P4_7_1)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="calles_estado")

P4_7_2 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_7_2) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_7_2=="1") %>% 
  select(-c(servicio_se,P4_7_2)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="calles_reparacion")

P4_7_3 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_7_3) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_7_3=="1") %>% 
  select(-c(servicio_se,P4_7_3)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="calles_semaforos")

P4_7_4 <- mydesign %>%
  group_by(AREAM,ejercicio, P4_7_4) %>% 
  summarise(servicio= survey_mean()) %>% filter(P4_7_4=="1") %>% 
  select(-c(servicio_se,P4_7_4)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="calles_señalamientos")


P4_7A <- mydesign %>%
  group_by(AREAM,ejercicio, P4_7A) %>% 
  summarise(proportion= survey_mean()) %>% filter(P4_7A=="1" | P4_7A=="2") %>% 
  ungroup() %>% 
  group_by(AREAM,ejercicio) %>% 
  summarise(servicio=sum(proportion)) %>% 
  ungroup() %>% 
  group_by(ejercicio) %>% 
  mutate(rank=rank(desc(servicio),na.last = "keep", ties.method = "min"), nom_cort="calles_satisfaccion")


servicios_publicos <-  P4_4_1 %>% rbind(P4_4_2,P4_4_3,P4_4_4,P4_4A,
                                         P4_5_1, P4_5_2,P4_5_3, P4_5A,
                                         P4_6_1,P4_6_2,P4_6A,
                                         P4_7_1,P4_7_2,P4_7_3,P4_7_4,P4_7A)
 

write.csv(servicios_publicos,"resultado/servicios_publicos.csv", row.names = FALSE)

## Gráficos

# options(rsconnect.locale.cache = FALSE, rsconnect.locale = "es_ES.UTF-8")
# Sys.setlocale("LC_ALL", 'es_ES.UTF-8')

library(rcartocolor)
library(leaflet)
library(sf)
library(terra)
library(readxl)
library(tidyverse)
library(htmltools)
library(htmlwidgets)
# library(rgdal)
# library(rgeos)
library(rcartocolor)
library(leaflet)
library(magrittr)
library(readr)
library(highcharter)
library(dplyr)
library(colorspace)
library(RColorBrewer)
library(monochromeR)
library(janitor)
library(bsicons)
library(BAMMtools)
library(ggtext)


font_hoist <- function(family, silent = FALSE) {
  font_specs <- systemfonts::system_fonts() %>%
    dplyr::filter(family == .env[["family"]]) %>%
    dplyr::mutate(family = paste(.data[["family"]], .data[["style"]])) %>%
    dplyr::select(plain = .data[["path"]], name = .data[["family"]])
  
  purrr::pwalk(as.list(font_specs), systemfonts::register_font)
  
  if (!silent)  message(paste0("Hoisted ", nrow(font_specs), " variants:\n",
                               paste(font_specs$name, collapse = "\n")))
}


font_hoist("Poppins")
font_hoist("Manrope")
font_hoist("Roboto Condensed")



options(scipen=999)
#showtext::showtext_opts(dpi = 400)
guinda <-"#832347"
verde_isaf<-"#097275"
azul <- "#003057"
dorado <-"#CCB656"
gris <-"#A8A8A7"
naranja <-"#C96C1C"
café <-"#7C5C15"

rojo <- "#db073d"
verde <- "#1bbc9b"
amarillo <- "#ff8f43"

pal <- c("rojo"=rojo, "amarillo"=amarillo, "verde"=verde)

# library(Cairo)
# options(shiny.usecairo=TRUE)

titulo <- "Poppins ExtraBold"
negrita <- "Manrope ExtraBold"
ligera <- "Manrope Light"
grafico <- "Roboto Condensed"
normal <- "Manrope"



temaejes2 <- theme(plot.margin = margin(10, 10, 10, 10),panel.grid=element_blank(), panel.border=element_blank(), 
                   axis.line= element_line(color = "black", size = 0.3),
                   plot.title = element_markdown(family = titulo , size = 20),  
                   plot.subtitle = element_markdown(family = negrita, size = 10, color = "black"), legend.title = element_blank(),
                   strip.text = element_markdown(family = negrita, size = 10, hjust=0),
                   axis.text.x = element_text(family = normal, size =18),
                   axis.text.y = element_text(family = normal, size =10, color="black"),
                   axis.ticks.y = element_line(color="black"),
                   axis.line.y = element_blank(),
                   plot.background = element_rect(fill = "white", color = "white", size = 3),
                   panel.background = element_blank(),
                   #axis.title.x = element_text(family = ligera, size = 6, hjust=1),
                   #axis.title.y = element_text(family = ligera, size = 6, hjust=1), 
                   plot.caption = element_markdown(family = normal, size = 7),
                   legend.text = element_blank(), legend.background =  element_rect(fill="transparent", color="transparent"),
                   legend.box.background=  element_rect(fill="transparent", color="transparent" ), 
                   legend.key = element_rect(fill="transparent", color="transparent"),
                   legend.position = "none", plot.title.position = 'plot', plot.caption.position = 'plot')




## constante
servicios_publicos <- read_csv("resultado/servicios_publicos.csv") %>% 
  filter(AREAM=="25")

diccionario_servicios <- read_csv("datos/diccionario servicios.csv")

corto<- "parques_satisfaccion"

## FUNCION

grafico_servicios <- function(corto="parques_satisfaccion") {
  
servicios_publicos <- servicios_publicos %>% filter(nom_cort==corto)
diccionario_servicios <- diccionario_servicios %>% filter(nom_cort==corto)

caption_INEGI <- "**Lugar nacional:** resultado del indicador para cada una de las areas metropolitanas encuestadas ordenadas de mayor a menor.<br>
Elaborado por ISAF con información de la Encuesta Nacional de Calidad e Impacto Gubernamental de INEGI (2015-2023)."

titulo_texto <- paste0("<span style = 'font-size:10pt'>HERMOSILLO - ", diccionario_servicios$tema,"</span><br><span style = 'color:#832347'>",diccionario_servicios$variable,"</span>") 


subtitulo <- diccionario_servicios$subtit_4


graf_serv <-  ggplot(data = servicios_publicos , aes(x=ejercicio, y=servicio , group=1)) +
  geom_segment(aes(x = ejercicio, y = -.15, xend = ejercicio, yend = servicio), color=guinda,alpha=0.3, size=0.5, linetype= "dotted") +
  geom_line(color=alpha("gray",0.4), size=1.3) +
  #geom_rect(aes(xmin = as.Date("2023-01-01"), xmax = as.Date("2023-10-01"), ymin = 0, ymax = 100), fill=alpha("gray", .5)) +
  # geom_label(data=subset(servicios_publicos , ejercicio!="2023"), aes(x=ejercicio, y=servicio +.08, label=paste0(round(servicio*100,1) ,"%")), color=guinda, family=negrita, size=4, label.size = NA, fill="transparent") +
  # geom_label(data=subset(servicios_publicos , ejercicio=="2023"),aes(x=ejercicio, y=servicio +.10, label=paste0(round(servicio*100,1) ,"%")), color=guinda,  family=titulo, size=6, label.size = NA, fill="transparent") +
  # geom_label(data=subset(servicios_publicos , ejercicio=="2023"),aes(x=ejercicio, y=servicio -.105, label=paste0(rank,"°", "\nlugar\nnacional")), color="black",  family=negrita, size=3, label.size = NA, fill="transparent") +
  # geom_label(data=subset(servicios_publicos , ejercicio!="2023"),aes(x=ejercicio, y=servicio -.08, label=paste0(rank,"°")), color="black",  family=negrita, size=3, label.size = NA, fill="transparent") +
  shadowtext::geom_shadowtext(data=subset(servicios_publicos , ejercicio!="2023"), aes(x=ejercicio, y=servicio +.08, label=paste0(round(servicio*100,1) ,"%")), color=guinda, family=negrita, size=4, label.size = NA,  bg.colour='white') +
  shadowtext::geom_shadowtext(data=subset(servicios_publicos , ejercicio=="2023"),aes(x=ejercicio, y=servicio +.10, label=paste0(round(servicio*100,1) ,"%")), color=guinda,  family=titulo, size=6, label.size = NA,  bg.colour='white') +
  shadowtext::geom_shadowtext(data=subset(servicios_publicos , ejercicio=="2023"),aes(x=ejercicio, y=servicio -.16, label=paste0(rank,"°", "\nlugar\nnacional")), color="black",  family=negrita, size=3, label.size = NA,  bg.colour='white') +
  shadowtext::geom_shadowtext(data=subset(servicios_publicos , ejercicio!="2023"),aes(x=ejercicio, y=servicio -.08, label=paste0(rank,"°")), color="black",  family=negrita, size=3, label.size = NA,  bg.colour='white') +
  # geom_label(data=subset(inseguridad, grupo_edad=="18-29"), aes(x=grupo_edad, y=12, label=paste0("PROMEDIO ",promedio)), 
  #            color="#01787E", family=titulo, size=2.5, label.size = NA, hjust=0.3) +
  geom_point(data=subset(servicios_publicos, ejercicio!="2023"), fill=guinda,shape=21, color="white", size=3, stroke=1.5) +
  geom_point(data=subset(servicios_publicos, ejercicio=="2023"),fill=guinda,shape=21, color="white",  size=3, stroke=1.5) +
  coord_cartesian(clip = 'off') +
  scale_y_continuous(limits=c(-.15, 1.15)) + 
  scale_x_continuous(limits=c(2013, 2025), breaks=seq(from=2015, to=2023, by=2), labels=seq(from=2015, to=2023, by=2)) +
  # date_breaks = "3 month", labels = function(x) if_else(is.na(lag(x)) | !year(lag(x)) == year(x), 
  #                                                       paste(translate_date(month(x, label = TRUE, abbr=FALSE)), "\n", year(x)), 
  #                                                       paste(translate_date(month(x, label = TRUE, abbr=FALSE))))) +
  # facet_wrap(~fct_reorder(col_problema, pregunta, .desc = FALSE), ncol = 1)+
  # scale_color_manual(values=pal) +
  # scale_fill_manual(values=pal) +
  guides(color="none", fill="none") +
  theme_minimal() + temaejes2 +
  theme(legend.text = element_text(family = normal, size = 7), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
        #plot.subtitle = element_markdown(family = negrita, size = 8, color = "black"),
        strip.text = element_markdown(family = negrita, size = 10, hjust=0),
        panel.grid.major.x = element_line(color = "transparent",
                                          size = 0.3,
                                          linetype = 2),
        axis.text.x = element_text(family = normal, size =9, color="black")) +
  labs(y =NULL, 
       x = NULL,legend= NULL, title  = titulo_texto,
       subtitle= subtitulo,
       caption =caption_INEGI)

graf_serv

ggsave(paste0("servicios_publicos_hmo/",diccionario_servicios$numeral,"_", corto, ".png"),  height = 5, width = 5*(16/9), dpi = 600)

}


for (k in unique(diccionario_servicios$nom_cort)) {
  grafico_servicios(k)
}       
